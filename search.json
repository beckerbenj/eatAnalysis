[{"path":"https://beckerbenj.github.io/eatAnalysis/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Benjamin Becker. Author, maintainer. Sebastian Weirich. Author. Karoline Sachse. Contributor.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Becker B, Sebastian Weirich (2024). eatAnalysis: Convenience function various analysis types. R package version 0.3.10, https://beckerbenj.github.io/eatAnalysis/.","code":"@Manual{,   title = {eatAnalysis: Convenience function for various analysis types},   author = {Benjamin Becker and {Sebastian Weirich}},   year = {2024},   note = {R package version 0.3.10},   url = {https://beckerbenj.github.io/eatAnalysis/}, }"},{"path":[]},{"path":"https://beckerbenj.github.io/eatAnalysis/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Convenience function for various analysis types","text":"eatAnalysis provides helpful functions educational research. includes functions processing lme4 output, writing files .xlsx calculating (weighted) descriptive statistics.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Convenience function for various analysis types","text":"","code":"# Install eatAnalysis from GitHub via devtools::install_github(\"beckerbenj/eatAnalysis\")"},{"path":"https://beckerbenj.github.io/eatAnalysis/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Convenience function for various analysis types","text":"","code":"library(eatAnalysis)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/aggregateDataOld.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate variables to items and/or scales. — aggregateDataOld","title":"Aggregate variables to items and/or scales. — aggregateDataOld","text":"old version aggregateData function eatPrep package. function currently deprecated kept package keep older scripts executable. reason, inappropriate argument names aggregateDataOld modified. function might beneficial aggregation information IQB database available.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/aggregateDataOld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate variables to items and/or scales. — aggregateDataOld","text":"","code":"aggregateDataOld(   all.daten,   spalten,   unexpected.pattern.as.na = TRUE,   printCases = FALSE,   printPattern = FALSE,   inputList = NULL )"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/aggregateDataOld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate variables to items and/or scales. — aggregateDataOld","text":".daten data frame wide format least two (dichotomous) variable columns. spalten Column names numbers variables aggregate. unexpected.pattern..na Logical: TRUE, non-valid patterns aggregated NA. printCases Logical: Specifies whether exhaustive aggregation information printed console. printPattern Logical: Print unexpected patterns console? inputList Optional: Input list differentiate variables (sub items) items. NULL, variables data frame share ID except last sign considered belong item.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/aggregateDataOld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate variables to items and/or scales. — aggregateDataOld","text":"list. First element data frame sum scores. Second element data frame aggregated scores. Third element data frame information many variables summarized item.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/aggregateDataOld.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate variables to items and/or scales. — aggregateDataOld","text":"function use rather simple aggregation rule: variables share common “stem” considered belong together. “stem” everything except last sign. convention, last sign may letter ascending order, example \"I1a\", \"I1b\", \"I1c\". However, \"I12\", \"I1_\", \"I1j\" also possible although less convenient. item \"I1\" consists three variables considered correct variables correct. See examples details. Note: inputList specified, aggregation rules executed specified ZKD input list.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/aggregateDataOld.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate variables to items and/or scales. — aggregateDataOld","text":"","code":"### create artificial data dat <- data.frame(id = paste0(\"P\", 11:50),                   matrix(data = sample(x=0:1, size = 400, replace = TRUE),                   nrow=40, ncol = 10)) ### aggregate Item 0+1+2 and 4+5 and 8+9: define sequential letter colnames(dat)[-1] <- c(\"I1a\", \"I1b\", \"I1c\", \"I2a\", \"I3a\", \"I3b\",                        \"I4a\", \"I5a\", \"I6a\", \"I6b\") agg <- aggregateDataOld(dat, -1) #> Aggregate 10 variable(s) to 6 item(s)."},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/aggregateDataOldL.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate variables to items and/or scales in long format data.frames. — aggregateDataOldL","title":"Aggregate variables to items and/or scales in long format data.frames. — aggregateDataOldL","text":"old version aggregateData function eatPrep package. contrast aggregateDataOld, aggregateDataOldL accepts returns long format data, .e. one line per variable/person ID combination. function currently deprecated kept package keep older scripts executable. function might beneficial aggregation information IQB database available.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/aggregateDataOldL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate variables to items and/or scales in long format data.frames. — aggregateDataOldL","text":"","code":"aggregateDataOldL(   datLong,   idCol,   varCol,   valueCol,   varExclude = NULL,   itemColName = \"item\",   unexpected.pattern.as.na = TRUE,   printCases = FALSE,   printPattern = FALSE,   inputList = NULL )"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/aggregateDataOldL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate variables to items and/or scales in long format data.frames. — aggregateDataOldL","text":"datLong data frame long format least three columns: person identifier, varable identifier response. idCol Name number person identifier column long format data varCol Name number variable identifier column long format data valueCol Name number variable response column long format data varExclude Optional: Numeric vector variables excluded aggregation case itemColName Name item identifier column newly created aggregated data.frame. Name must occur current data.frame. unexpected.pattern..na Logical: TRUE, non-valid patterns aggregated NA. printCases Logical: Specifies whether exhaustive aggregation information printed console. printPattern Logical: Print unexpected patterns console? inputList Optional: Input list differentiate variables (sub items) items. NULL, variables data frame share ID except last sign considered belong item.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/aggregateDataOldL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate variables to items and/or scales in long format data.frames. — aggregateDataOldL","text":"data.frame long format containing sum aggregated values, maintaining additional columns original data.frame values vary variables belong item. sum variable named \"valueSum\", aggregated variable names \"valueAgg\". number aggregated variables (.e. maximum possible sum score per item) captured variable \"valueMax\".","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/aggregateDataOldL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate variables to items and/or scales in long format data.frames. — aggregateDataOldL","text":"function use rather simple aggregation rule: variables share common “stem” considered belong together. “stem” everything except last sign. convention, last sign may letter ascending order, example \"I1a\", \"I1b\", \"I1c\". However, \"I12\", \"I1_\", \"I1j\" also possible although less convenient. item \"I1\" consists three variables considered correct variables correct. See examples details. Note: inputList specified, aggregation rules executed specified ZKD input list.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/aggregateDataOldL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate variables to items and/or scales in long format data.frames. — aggregateDataOldL","text":"","code":"### create artificial data dat <- data.frame ( id = paste0(\"P\", 11:50),        matrix(data = sample(x=0:1, size = 400, replace = TRUE),nrow=40, ncol = 10)) ### aggregate Item 0+1+2 and 4+5 and 8+9: define sequential letter colnames(dat)[-1] <- c(\"I1a\", \"I1b\", \"I1c\", \"I2a\", \"I3a\", \"I3b\", \"I4a\", \"I5a\", \"I6a\", \"I6b\") ### reshape data to the long format datL<- reshape2::melt(dat, id.vars = \"id\") agg <- aggregateDataOldL(datL,idCol=\"id\", varCol=\"variable\", valueCol=\"value\") #> Overall: 10 variables, 6 items. Aggregate 7 variables to 3 items."},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/convertLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform SPSS variable and value labels. — convertLabel","title":"Transform SPSS variable and value labels. — convertLabel","text":"default, read.spss foreign package uses variable labels attributes whole data.frame, value labels attribute specific variable data.frame. convertLabel provides variable value labels variable attributes.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/convertLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform SPSS variable and value labels. — convertLabel","text":"","code":"convertLabel(spssList, stringsAsFactors = TRUE, useZkdConvention = TRUE)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/convertLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform SPSS variable and value labels. — convertLabel","text":"spssList object created read.spss. Important: Using read.spss, .data.frame FALSE. stringsAsFactors Transform character variables factors? useZkdConvention Logical: TRUE. variable labels named 'varLabel', value labels named 'valLabel'.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/convertLabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform SPSS variable and value labels. — convertLabel","text":"data.frame.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/convertLabel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transform SPSS variable and value labels. — convertLabel","text":"Sebastian Weirich","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/convertLabel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform SPSS variable and value labels. — convertLabel","text":"","code":"file <- system.file(\"extdata\", \"Klauer.sav\", package = \"eatAnalysis\") dat  <- foreign::read.spss(file, to.data.frame=FALSE, use.value.labels = FALSE) dat  <- convertLabel(dat) str(dat) #> 'data.frame':\t279 obs. of  20 variables: #>  $ TRAINING: num  1 1 1 1 1 1 1 1 1 1 ... #>   ..- attr(*, \"value.labels\")= Named num [1:2] 1 0 #>   .. ..- attr(*, \"names\")= chr [1:2] \"Experimentalgruppe\" \"Kontrollgruppe\" #>   ..- attr(*, \"varLabel\")= chr \"Zugeh\\xf6rigkeit zur Trainings- oder Experimentalgruppe\" #>   ..- attr(*, \"valLabel\")= Named num [1:2] 1 0 #>   .. ..- attr(*, \"names\")= chr [1:2] \"Experimentalgruppe\" \"Kontrollgruppe\" #>  $ WST11   : num  10 9 17 15 15 14 14 16 12 10 ... #>   ..- attr(*, \"varLabel\")= chr \"Wortschatztest; Teil 1 (bei Zufallsaufteilung des Tests); Pr\\xe4test\" #>  $ WST21   : num  11 9 17 12 14 17 12 17 14 10 ... #>   ..- attr(*, \"varLabel\")= chr \"Wortschatztest; Teil 2 (bei Zufallsaufteilung des Tests); Pr\\xe4test\" #>  $ WST1    : num  21 18 34 27 29 31 26 33 26 20 ... #>   ..- attr(*, \"varLabel\")= chr \"Wortschatztest; Gesamttest (Addition von WST11 und WST21); Pr\\xe4test\" #>  $ CFT11   : num  11 16 24 24 26 17 17 17 18 13 ... #>   ..- attr(*, \"varLabel\")= chr \"Grundintellingenztest CFT 1 Skala 1; Teil 1 (bei Zufallsaufteilung des Tests); Pr\\xe4test\" #>  $ CFT21   : num  9 15 23 21 23 13 16 19 13 12 ... #>   ..- attr(*, \"varLabel\")= chr \"Grundintellingenztest CFT 1 Skala 1; Teil 2 (bei Zufallsaufteilung des Tests); Pr\\xe4test\" #>  $ CFT1    : num  20 31 47 45 49 30 33 36 31 25 ... #>   ..- attr(*, \"varLabel\")= chr \"Grundintellingenztest CFT 1 Skala 1; Gesamttest (Addition von CFT11 und CFT21); Pr\\xe4test\" #>  $ CPM11   : num  9 8 16 15 13 13 9 14 12 7 ... #>   ..- attr(*, \"varLabel\")= chr \"Raven-Matrizen-Test; Teil 1 (bei Zufallsaufteilung des Tests); Pr\\xe4test\" #>  $ CPM21   : num  8 5 15 15 14 10 9 8 12 7 ... #>   ..- attr(*, \"varLabel\")= chr \"Raven-Matrizen-Test; Teil 2 (bei Zufallsaufteilung des Tests); Pr\\xe4test\" #>  $ CPM1    : num  17 13 31 30 27 23 18 22 24 14 ... #>   ..- attr(*, \"varLabel\")= chr \"Raven-Matrizen-Test; Gesamttest (Addition von CPM11 und CPM21); Pr\\xe4test\" #>  $ WST12   : num  10 10 17 17 16 16 14 16 12 10 ... #>   ..- attr(*, \"varLabel\")= chr \"Wortschatztest; Teil 1 (bei Zufallsaufteilung des Tests); Posttest 1\" #>  $ WST22   : num  11 13 17 17 12 17 13 16 12 11 ... #>   ..- attr(*, \"varLabel\")= chr \"Wortschatztest; Teil 2 (bei Zufallsaufteilung des Tests); Posttest 1\" #>  $ WST2    : num  21 23 34 34 28 33 27 32 24 21 ... #>   ..- attr(*, \"varLabel\")= chr \"Wortschatztest; Gesamttest (Addition von WST12 und WST22); Posttest 1\" #>  $ CFT12   : num  20 24 33 31 33 22 23 30 28 24 ... #>   ..- attr(*, \"varLabel\")= chr \"Grundintellingenztest CFT 1 Skala 1; Teil 1 (bei Zufallsaufteilung des Tests); Posttest 1\" #>  $ CFT22   : num  21 24 29 33 29 20 23 28 27 22 ... #>   ..- attr(*, \"varLabel\")= chr \"Grundintellingenztest CFT 1 Skala 1; Teil 2 (bei Zufallsaufteilung des Tests); Posttest 1\" #>  $ CFT2    : num  41 48 62 64 62 42 46 58 55 46 ... #>   ..- attr(*, \"varLabel\")= chr \"Grundintellingenztest CFT 1 Skala 1; Gesamttest (Addition von CFT12 und CFT22); Posttest 1\" #>  $ CPM12   : num  14 12 21 22 21 17 15 19 16 13 ... #>   ..- attr(*, \"varLabel\")= chr \"Raven-Matrizen-Test; Teil 1 (bei Zufallsaufteilung des Tests); Posttest 1\" #>  $ CPM22   : num  14 8 20 20 18 15 15 16 17 13 ... #>   ..- attr(*, \"varLabel\")= chr \"Raven-Matrizen-Test; Teil 2 (bei Zufallsaufteilung des Tests); Posttest 1\" #>  $ CPM2    : num  28 20 41 42 39 32 30 35 33 26 ... #>   ..- attr(*, \"varLabel\")= chr \"Raven-Matrizen-Test; Gesamttest; Posttest 1\" #>  $ RCI_WST : num  0 1.659 0 2.323 -0.332 ... #>   ..- attr(*, \"varLabel\")= chr \"\""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/copyScanSelection.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy booklet scan selection to desired directory — copyScanSelection","title":"Copy booklet scan selection to desired directory — copyScanSelection","text":"Functions allows copy scans subset variables, sort variable codes, desired directory. might useful, , example, scans variable \"D122a\" scored 1 (correct) collected common folder.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/copyScanSelection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy booklet scan selection to desired directory — copyScanSelection","text":"","code":"copyScanSelection(   vars,   dat,   id,   sourceDir,   targetDir,   codebook,   startRow = 4,   sheet = \"Codebook\",   varColumn = \"Variable\",   bookletColumnPrefix = \"TH\",   exclude = c(\"mbd\", \"mnr\", \"mci\", \"mnr\", \"mir\", \"mbi\", \"9\", \"97\", \"98\", \"99\", \"7\", \"8\"),   separators = c(\"-\", \"_\"),   suffix = \".TIF\" )"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/copyScanSelection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy booklet scan selection to desired directory — copyScanSelection","text":"vars character string variables whose scans copied. missing, available variables used. dat wide format data contain variables. Names vars must match column names dat. id column number column name person identifier variable wide format data. sourceDir directory contains scans. targetDir target directory copied scans. codebook either character string folder corresponding excel file, already imported data.frame IQB codebook. startRow Optional: codebook provided character string referring excel file, startRow indicates first line file read . sheet character string containing name excel sheet containing codebook. necessary codebook provided character string. varColumn character string variable identifier column name codebook. bookletColumnPrefix Character string booklet identifier prefix codebook. codebook usually contains several booklet columns begin common identifier. exclude Character string codes ignored selection. codes used, type exclude = \"\" exclude = NULL. separators Two character strings must given: First string separates booklet identifier page identifier filenames scans. Second string separates page identifier person identifier filenames scans. suffix Suffix filenames scans. scan files multiple suffixes, can use suffix = \".TIF|.tif\", fo example.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/copyScanSelection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy booklet scan selection to desired directory — copyScanSelection","text":"return, files written disk.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/copyScanSelection.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Copy booklet scan selection to desired directory — copyScanSelection","text":"Sebastian Weirich","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/copyScanSelection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy booklet scan selection to desired directory — copyScanSelection","text":"","code":"if (FALSE) { # \\dontrun{ # source directory path <- \"s:/Vera3-Scans/Deutsch/V3_Pilot_2015/Depot_100\" # target directory target <- \"N:/archiv/test\" # codebook folder codebook <- \"p:/R/Material/V3-2016_Codebook_Zoowaerter.xlsx\" # variable list vars <- readxl::read_excel(\"p:/R/Material/KA3_Variablennamen_Zoowaerter.xlsx\",                   sheet = \"Tabelle1\") vars <- substr(unique(unlist(vars)),1,7) # load data and reshape to the wide format load(\"r:/VERA3/Deutsch/V3_DEU_2016/1_Pilotierung_2015/13_Auswertung und Itemselektion/02_Itemebene.rda\") dat <- reshape2::dcast(datAggL, ID~item, value.var = \"value\") # select and copy scans cop  <- copyScanSelection(vars=vars, dat=dat, id=\"ID\", sourceDir=path,                          targetDir=target, codebook=codebook, startRow = 1) } # }"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createLabelList.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a data.frame with variable and value labels from variable attributes — createLabelList","title":"Creates a data.frame with variable and value labels from variable attributes — createLabelList","text":"default, read.spss foreign package uses variable.labels attributes whole data.frame, value.labels attribute specific variable data.frame. convertLabel provides variable value labels variable attributes. createLabelList creates data.frame variable value labels.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createLabelList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a data.frame with variable and value labels from variable attributes — createLabelList","text":"","code":"createLabelList(dfr, additionalAttributes = NULL)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createLabelList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a data.frame with variable and value labels from variable attributes — createLabelList","text":"dfr data.frame variable value labels stored attributes using convention convertLabel. additionalAttributes Optional: Vector names additional attributes collected returned data frame.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createLabelList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a data.frame with variable and value labels from variable attributes — createLabelList","text":"data.frame.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createLabelList.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates a data.frame with variable and value labels from variable attributes — createLabelList","text":"Sebastian Weirich","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createLabelList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a data.frame with variable and value labels from variable attributes — createLabelList","text":"","code":"file <- system.file(\"extdata\", \"Klauer.sav\", package = \"eatAnalysis\") dat  <- foreign::read.spss(file, to.data.frame=FALSE, use.value.labels = FALSE) dat  <- convertLabel(dat) atts <- createLabelList(dat)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createLoginXml.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates xml login files from data.frame for computer-based assessment — createLoginXml","title":"Creates xml login files from data.frame for computer-based assessment — createLoginXml","text":"computer-based assessment, logins student created beforehand. logins password captured common data.frame, function creates several xml files, one class test group.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createLoginXml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates xml login files from data.frame for computer-based assessment — createLoginXml","text":"","code":"createLoginXml(   dat,   login,   password,   label,   group = NULL,   class = \"Klasse\",   dir,   prefix = \"test\",   sep = \"_\",   booklet,   mode = \"run-hot-return\",   login.mode = \"monitor-group\",   cslb = 5 )"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createLoginXml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates xml login files from data.frame for computer-based assessment — createLoginXml","text":"dat data.frame login information. See examples. login Variable name column number login column dat. Login variable must contain missing values. password Variable name column number password column dat. Passwords must contain missing values. label Variable name column number label column dat. Missing values allowed. group Optional: several classes test groups stored dat, group specifies variable name column number group variable dat. specified, missing values allowed. class Variable name column number class column dat. Missing values allowed. dir target directory xml files prefix prefix file name xml files sep separator separates prefix remaining xml file name booklet single string (length 1) desired booklet entry xml files. See example. mode single string (length 1) desired mode entry xml files. See example. login.mode single string (length 1) desired login mode entry xml files. See example. cslb class size lower boundary: classes less cslb students, warning given.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createLoginXml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates xml login files from data.frame for computer-based assessment — createLoginXml","text":"return, files written disk.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createLoginXml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates xml login files from data.frame for computer-based assessment — createLoginXml","text":"","code":"file <- system.file(\"extdata\", \"logins.xlsx\", package = \"eatAnalysis\") dat  <- readxl::read_excel(file, sheet = \"Tabelle1\") createLoginXml (dat=dat, login = \"Name\", password=\"Passwort\", label = \"Label\",group = \"groupID\",    dir = tempdir(), prefix = \"logins\", sep=\"_\",booklet = \"V8DeuTBAPilot2022TH15Faultier\") #> Convert 'dat' of class 'tbl_df', 'tbl', 'data.frame' to a data.frame. #> Specified folder 'tmp/RtmpfknVuA' does not exist. Create folder ..."},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createSpssSyntaxSnippet.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare SPSS syntax to transfer variable and value labels into an SPSS data set — createSpssSyntaxSnippet","title":"Prepare SPSS syntax to transfer variable and value labels into an SPSS data set — createSpssSyntaxSnippet","text":"Usually, variable value labels lost ASCII data imported SPSS. Variable value labels normally must reestablished using SPSS syntax file. function prepares SPSS syntax snippet variable value labels stored attributes R.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createSpssSyntaxSnippet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare SPSS syntax to transfer variable and value labels into an SPSS data set — createSpssSyntaxSnippet","text":"","code":"createSpssSyntaxSnippet(dat, file, keep = TRUE)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createSpssSyntaxSnippet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare SPSS syntax to transfer variable and value labels into an SPSS data set — createSpssSyntaxSnippet","text":"dat R data frame. Variable value labels must stored attributes provided, example, function convertLabel. file Character string name syntax file created. keep Logical: Create value labels even value occur data? example, keep = TRUE, createSpssSyntaxSnippet write labels also males, even data contains females.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createSpssSyntaxSnippet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare SPSS syntax to transfer variable and value labels into an SPSS data set — createSpssSyntaxSnippet","text":"return, SPSS syntax file written disk.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createSpssSyntaxSnippet.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prepare SPSS syntax to transfer variable and value labels into an SPSS data set — createSpssSyntaxSnippet","text":"Sebastian Weirich","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/createSpssSyntaxSnippet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare SPSS syntax to transfer variable and value labels into an SPSS data set — createSpssSyntaxSnippet","text":"","code":"file <- system.file(\"extdata\", \"Klauer.sav\", package = \"eatAnalysis\") dat  <- foreign::read.spss(file, to.data.frame=FALSE, use.value.labels = FALSE) dat  <- convertLabel(dat) createSpssSyntaxSnippet( dat = dat, file = file.path(tempdir(), \"labels.txt\"), keep = FALSE)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/df2tex_xtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create latex table code. — df2tex_xtable","title":"Create latex table code. — df2tex_xtable","text":"Create latex code table data.frame.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/df2tex_xtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create latex table code. — df2tex_xtable","text":"","code":"df2tex_xtable(   df,   caption = \"\",   san = TRUE,   label = NULL,   note = NULL,   note_width = 14 )"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/df2tex_xtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create latex table code. — df2tex_xtable","text":"df data.frame. caption single character, containing table caption. san characters sanitized. label single character, containing table label (referencing .tex document. note single character, containing table notes. note_width single numeric, containing table note width.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/df2tex_xtable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create latex table code. — df2tex_xtable","text":"Returns NULL.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/df2tex_xtable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create latex table code. — df2tex_xtable","text":"Prints resulting latex code console","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/df2tex_xtable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create latex table code. — df2tex_xtable","text":"","code":"df2tex_xtable(mtcars) #> % latex table generated in R 4.4.1 by xtable 1.8-4 package #> % Fri Sep  6 10:12:53 2024 #> \\begin{table}[ht] #> \\centering #> \\caption{}  #> \\begin{tabular}{rrrrrrrrrrr} #>   \\hline #> mpg & cyl & disp & hp & drat & wt & qsec & vs & am & gear & carb \\\\  #>   \\hline #> 21.00 & 6.00 & 160.00 & 110.00 & 3.90 & 2.62 & 16.46 & 0.00 & 1.00 & 4.00 & 4.00 \\\\  #>   21.00 & 6.00 & 160.00 & 110.00 & 3.90 & 2.88 & 17.02 & 0.00 & 1.00 & 4.00 & 4.00 \\\\  #>   22.80 & 4.00 & 108.00 & 93.00 & 3.85 & 2.32 & 18.61 & 1.00 & 1.00 & 4.00 & 1.00 \\\\  #>   21.40 & 6.00 & 258.00 & 110.00 & 3.08 & 3.21 & 19.44 & 1.00 & 0.00 & 3.00 & 1.00 \\\\  #>   18.70 & 8.00 & 360.00 & 175.00 & 3.15 & 3.44 & 17.02 & 0.00 & 0.00 & 3.00 & 2.00 \\\\  #>   18.10 & 6.00 & 225.00 & 105.00 & 2.76 & 3.46 & 20.22 & 1.00 & 0.00 & 3.00 & 1.00 \\\\  #>   14.30 & 8.00 & 360.00 & 245.00 & 3.21 & 3.57 & 15.84 & 0.00 & 0.00 & 3.00 & 4.00 \\\\  #>   24.40 & 4.00 & 146.70 & 62.00 & 3.69 & 3.19 & 20.00 & 1.00 & 0.00 & 4.00 & 2.00 \\\\  #>   22.80 & 4.00 & 140.80 & 95.00 & 3.92 & 3.15 & 22.90 & 1.00 & 0.00 & 4.00 & 2.00 \\\\  #>   19.20 & 6.00 & 167.60 & 123.00 & 3.92 & 3.44 & 18.30 & 1.00 & 0.00 & 4.00 & 4.00 \\\\  #>   17.80 & 6.00 & 167.60 & 123.00 & 3.92 & 3.44 & 18.90 & 1.00 & 0.00 & 4.00 & 4.00 \\\\  #>   16.40 & 8.00 & 275.80 & 180.00 & 3.07 & 4.07 & 17.40 & 0.00 & 0.00 & 3.00 & 3.00 \\\\  #>   17.30 & 8.00 & 275.80 & 180.00 & 3.07 & 3.73 & 17.60 & 0.00 & 0.00 & 3.00 & 3.00 \\\\  #>   15.20 & 8.00 & 275.80 & 180.00 & 3.07 & 3.78 & 18.00 & 0.00 & 0.00 & 3.00 & 3.00 \\\\  #>   10.40 & 8.00 & 472.00 & 205.00 & 2.93 & 5.25 & 17.98 & 0.00 & 0.00 & 3.00 & 4.00 \\\\  #>   10.40 & 8.00 & 460.00 & 215.00 & 3.00 & 5.42 & 17.82 & 0.00 & 0.00 & 3.00 & 4.00 \\\\  #>   14.70 & 8.00 & 440.00 & 230.00 & 3.23 & 5.34 & 17.42 & 0.00 & 0.00 & 3.00 & 4.00 \\\\  #>   32.40 & 4.00 & 78.70 & 66.00 & 4.08 & 2.20 & 19.47 & 1.00 & 1.00 & 4.00 & 1.00 \\\\  #>   30.40 & 4.00 & 75.70 & 52.00 & 4.93 & 1.61 & 18.52 & 1.00 & 1.00 & 4.00 & 2.00 \\\\  #>   33.90 & 4.00 & 71.10 & 65.00 & 4.22 & 1.83 & 19.90 & 1.00 & 1.00 & 4.00 & 1.00 \\\\  #>   21.50 & 4.00 & 120.10 & 97.00 & 3.70 & 2.46 & 20.01 & 1.00 & 0.00 & 3.00 & 1.00 \\\\  #>   15.50 & 8.00 & 318.00 & 150.00 & 2.76 & 3.52 & 16.87 & 0.00 & 0.00 & 3.00 & 2.00 \\\\  #>   15.20 & 8.00 & 304.00 & 150.00 & 3.15 & 3.44 & 17.30 & 0.00 & 0.00 & 3.00 & 2.00 \\\\  #>   13.30 & 8.00 & 350.00 & 245.00 & 3.73 & 3.84 & 15.41 & 0.00 & 0.00 & 3.00 & 4.00 \\\\  #>   19.20 & 8.00 & 400.00 & 175.00 & 3.08 & 3.85 & 17.05 & 0.00 & 0.00 & 3.00 & 2.00 \\\\  #>   27.30 & 4.00 & 79.00 & 66.00 & 4.08 & 1.94 & 18.90 & 1.00 & 1.00 & 4.00 & 1.00 \\\\  #>   26.00 & 4.00 & 120.30 & 91.00 & 4.43 & 2.14 & 16.70 & 0.00 & 1.00 & 5.00 & 2.00 \\\\  #>   30.40 & 4.00 & 95.10 & 113.00 & 3.77 & 1.51 & 16.90 & 1.00 & 1.00 & 5.00 & 2.00 \\\\  #>   15.80 & 8.00 & 351.00 & 264.00 & 4.22 & 3.17 & 14.50 & 0.00 & 1.00 & 5.00 & 4.00 \\\\  #>   19.70 & 6.00 & 145.00 & 175.00 & 3.62 & 2.77 & 15.50 & 0.00 & 1.00 & 5.00 & 6.00 \\\\  #>   15.00 & 8.00 & 301.00 & 335.00 & 3.54 & 3.57 & 14.60 & 0.00 & 1.00 & 5.00 & 8.00 \\\\  #>   21.40 & 4.00 & 121.00 & 109.00 & 4.11 & 2.78 & 18.60 & 1.00 & 1.00 & 4.00 & 2.00 \\\\  #>    \\hline #> \\end{tabular} #> \\end{table}"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/get.lmer.effects.forBootMer.html","id":null,"dir":"Reference","previous_headings":"","what":"get.lmer.effects for bootstrap — get.lmer.effects.forBootMer","title":"get.lmer.effects for bootstrap — get.lmer.effects.forBootMer","text":"wrapper get.lmer.effects intended prepare bootstrap analyses. See examples get.lmer.effects details.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/get.lmer.effects.forBootMer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get.lmer.effects for bootstrap — get.lmer.effects.forBootMer","text":"","code":"get.lmer.effects.forBootMer(lmerObj)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/get.lmer.effects.forBootMer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get.lmer.effects for bootstrap — get.lmer.effects.forBootMer","text":"lmerObj object class merMod glmerMod, created lmer glmer lme4 package.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/get.lmer.effects.forBootMer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get.lmer.effects for bootstrap — get.lmer.effects.forBootMer","text":"numerical vector values.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/get.lmer.effects.forBootMer.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get.lmer.effects for bootstrap — get.lmer.effects.forBootMer","text":"Sebastian Weirich","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/get.lmer.effects.forBootMer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get.lmer.effects for bootstrap — get.lmer.effects.forBootMer","text":"","code":"### See examples of 'get.lmer.effects' for further details."},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/get.lmer.effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract results — get.lmer.effects","title":"Extract results — get.lmer.effects","text":"Extract results object created lmer glmer lme4 package.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/get.lmer.effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract results — get.lmer.effects","text":"","code":"get.lmer.effects(lmerObj, bootMerObj = NULL, conf = 0.95, saveData = FALSE)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/get.lmer.effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract results — get.lmer.effects","text":"lmerObj object class merMod glmerMod, created lmer glmer lme4 package. bootMerObj Optional: object S3 class boot, created bootMer. Applies standard error /confidence intervals bootstrap augmented lme4 results object. conf Applies confidence intervals bootstrap augmented lme4 results object. Define upper bound confidence interval. saveData Logical: data frame attached output attribute?","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/get.lmer.effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract results — get.lmer.effects","text":"data frame least 10 columns comprising results GLMM analysis. model name object analysis results assigned . source lmer-function called var1 First variable name var2 Second variable name type Type variable /derived parameter group group model parameter belongs par Name model parameter derived.par Second name model parameter var2 Second variable name value Corresponding numerical value","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/get.lmer.effects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract results — get.lmer.effects","text":"principle, get.lmer.effects collects output already contained lme4-output. Additionally, marginal conditional r-squared Nakagawa Schielzeth (2013) provided. parameters labeled R2_m R2_c par-column.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/get.lmer.effects.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract results — get.lmer.effects","text":"Sebastian Weirich","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/get.lmer.effects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract results — get.lmer.effects","text":"","code":"if (FALSE) { # \\dontrun{ library ( lme4 ) ### First example: GLMM analysis fmVA <- glmer( r2 ~ Anger + Gender + btype + situ + (1|id) + (1|item),                family = binomial, data = VerbAgg) results    <- get.lmer.effects ( fmVA )  ### second example: obtain standard errors and confidence intervals from the model estimated ### in the first example via bootstrap (using only 5 bootstrap samples for illustration) ### We use the 'bootMer' function fom the lme4 package fmVAB<- bootMer(x = fmVA, FUN = get.lmer.effects.forBootMer, nsim = 5) resultsBoot<- get.lmer.effects ( lmerObj = fmVA, bootMerObj = fmVAB, conf = .95, saveData = FALSE) } # }"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/intGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate interaction terms for lm formulas — intGen","title":"Generate interaction terms for lm formulas — intGen","text":"Specify two-way three-way interactions set independent variables. function might useful, user regression model two predictors want specify main effects plus two-way interaction effects higher-order interaction terms.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/intGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate interaction terms for lm formulas — intGen","text":"","code":"intGen(vars, upto = 3)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/intGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate interaction terms for lm formulas — intGen","text":"vars Character vector variables upto maximum way interactions created.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/intGen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate interaction terms for lm formulas — intGen","text":"character string (snippet) useful formula generation.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/intGen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate interaction terms for lm formulas — intGen","text":"Sebastian Weirich","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/intGen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate interaction terms for lm formulas — intGen","text":"","code":"data(mtcars) # relevant variables vars <- c(\"cyl\", \"hp\", \"wt\") # cyl*hp*wt would specify two-way as well as three-way interactions # generate formula snippet for two-way interactionn frml <- intGen(vars = vars, upto = 2) frml1<- as.formula(paste0(\"mpg ~ \", paste(vars, collapse=\" + \"), \" + \",         paste(frml, collapse=\" + \"))) mod  <- lm(frml1, data = mtcars)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/item.logit.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulates 1PL or 2PL responses — item.logit","title":"Simulates 1PL or 2PL responses — item.logit","text":"Simulates responses following 1PL 2PL model given item parameters assuming normally distributed person parameters.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/item.logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulates 1PL or 2PL responses — item.logit","text":"","code":"item.logit(z, slope = 1, thr)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/item.logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulates 1PL or 2PL responses — item.logit","text":"z vector item difficulties. slope vector item discrimination parameters. Default 1 equals 1PL model. thr vector item threshold parameters.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/item.logit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulates 1PL or 2PL responses — item.logit","text":"list two matrices. First matrix includes responses, seconds matrix includes correct response probabilities.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/item.logit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulates 1PL or 2PL responses — item.logit","text":"Ulf Kroehne","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/item.logit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulates 1PL or 2PL responses — item.logit","text":"","code":"z <- rnorm(30, 0, 1) d <- item.logit(z = z, thr = 0)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/loadRdataLikeRDS.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload Saved rda or Rdata Datasets and assign them to a new object — loadRdataLikeRDS","title":"Reload Saved rda or Rdata Datasets and assign them to a new object — loadRdataLikeRDS","text":"Function allows load rda Rdata objects like rds objects. Hence, function mimics readRDS functionality rda Rdata objects.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/loadRdataLikeRDS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload Saved rda or Rdata Datasets and assign them to a new object — loadRdataLikeRDS","text":"","code":"loadRdataLikeRDS(file)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/loadRdataLikeRDS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload Saved rda or Rdata Datasets and assign them to a new object — loadRdataLikeRDS","text":"file name rda Rdata file","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/loadRdataLikeRDS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload Saved rda or Rdata Datasets and assign them to a new object — loadRdataLikeRDS","text":"Rdata file contains one R object, object returned. file contains several objects, list objects returned.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/pretty_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a standard frequency table. — pretty_table","title":"Create a standard frequency table. — pretty_table","text":"Create standard frequency table can written excel.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/pretty_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a standard frequency table. — pretty_table","text":"","code":"pretty_table(x, x_label, useNA = \"ifany\")"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/pretty_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a standard frequency table. — pretty_table","text":"x vector. x_label Label x variable? useNA missing values treated table? Possible values: , ifany, always.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/pretty_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a standard frequency table. — pretty_table","text":"Returns data.frame 2 columns, levels x frequencies.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/pretty_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a standard frequency table. — pretty_table","text":"Standard table output ugly written excel. function creates easy write excel object.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/pretty_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a standard frequency table. — pretty_table","text":"","code":"pretty_table(iris$Species, \"Flower Species\") #>   Flower Species Frequency #> 1         setosa        50 #> 2     versicolor        50 #> 3      virginica        50"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/prop_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a standard relative frequency table. — prop_table","title":"Create a standard relative frequency table. — prop_table","text":"Create simple relative frequency table percentages, optionally using sampling weights.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/prop_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a standard relative frequency table. — prop_table","text":"","code":"prop_table(vec, weights = NULL, na.rm = FALSE, round_perc = 1)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/prop_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a standard relative frequency table. — prop_table","text":"vec vector. weights numeric vector non-negative weights. na.rm Set FALSE suppress checking NAs. TRUE, NAs removed x well weights prior variance estimation. round_perc many decimals percentages given?","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/prop_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a standard relative frequency table. — prop_table","text":"Returns data.frame 1 row.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/prop_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a standard relative frequency table. — prop_table","text":"","code":"# without weights prop_table(mtcars$cyl) #>      4    6    8 #> 1 34.4 21.9 43.8  # with weights prop_table(mtcars$cyl, weights = rep(c(0.5, 1), 16)) #>      4  6    8 #> 1 35.4 25 39.6"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/prop_table_by_and_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a standard relative frequency table. — prop_table_by_and_all","title":"Create a standard relative frequency table. — prop_table_by_and_all","text":"Create simple relative frequency table percentages.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/prop_table_by_and_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a standard relative frequency table. — prop_table_by_and_all","text":"","code":"prop_table_by_and_all(   df,   dep,   by_var,   weights = NULL,   na.rm = TRUE,   round_perc = 1 )"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/prop_table_by_and_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a standard relative frequency table. — prop_table_by_and_all","text":"df data.frame. dep name dependent variable data.frame. by_var name group variable data.frame. weights name weights variable data.frame. na.rm Set FALSE suppress checking NAs. TRUE, NAs removed x well weights prior variance estimation. round_perc many decimals percentages given?","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/prop_table_by_and_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a standard relative frequency table. — prop_table_by_and_all","text":"Returns data.frame 1 row.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/prop_table_by_and_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a standard relative frequency table. — prop_table_by_and_all","text":"Function meant able easily rbind various tables.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/prop_table_by_and_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a standard relative frequency table. — prop_table_by_and_all","text":"","code":"# without weights prop_table_by_and_all(df = mtcars, dep = \"cyl\", by_var = \"gear\") #>          4    6    8 #> 3      6.7 13.3 80.0 #> 4     66.7 33.3   NA #> 5     40.0 20.0 40.0 #> Total 34.4 21.9 43.8  # with weights mtcars2 <- mtcars mtcars2[, \"weights\"] <- rep(c(0.5, 1), 16) prop_table_by_and_all(df = mtcars2, dep = \"cyl\", by_var = \"gear\", weights = \"weights\") #>          4    6    8 #> 3      4.5 18.2 77.3 #> 4     68.4 31.6   NA #> 5     42.9 28.6 28.6 #> Total 35.4 25.0 39.6"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/read_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an .xlsx file. — read_xlsx","title":"Read an .xlsx file. — read_xlsx","text":"Read .xlsx file multiple sheets.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/read_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an .xlsx file. — read_xlsx","text":"","code":"read_xlsx(filePath)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/read_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an .xlsx file. — read_xlsx","text":"filePath path output file.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/read_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an .xlsx file. — read_xlsx","text":"list data.frame.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/read_xlsx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read an .xlsx file. — read_xlsx","text":".xlsx contains multiple sheets, output list sheets data.frame entries list.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/read_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read an .xlsx file. — read_xlsx","text":"","code":"f <- tempfile(fileext = \".xlsx\") write_xlsx(list(cars = mtcars, flowers = iris), filePath = f) allDat <- read_xlsx(f)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/save.lmer.effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Save lme4-output to disc — save.lmer.effects","title":"Save lme4-output to disc — save.lmer.effects","text":"output lme4 analysis saved memory saving manner.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/save.lmer.effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save lme4-output to disc — save.lmer.effects","text":"","code":"save.lmer.effects(lmerObj, lmerObjRestrict = NULL, fileName, scipen = 6)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/save.lmer.effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save lme4-output to disc — save.lmer.effects","text":"lmerObj lme4 object saved. lmerObjRestrict Optional: second (restricted) lme4 analysis output. Needs nested first one. Intended model comparison saved likewise. fileName Name file output (without file extension). scipen Maximum number decimal places exponential notation used.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/save.lmer.effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save lme4-output to disc — save.lmer.effects","text":"output returned console. Two files created desired directory.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/save.lmer.effects.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Save lme4-output to disc — save.lmer.effects","text":"Sebastian Weirich","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/save.lmer.effects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save lme4-output to disc — save.lmer.effects","text":"","code":"if (FALSE) { # \\dontrun{ library(lme4) ### Example from the help page of lmer(). fm1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy) save.lmer.effects(fm1, fileName = tempfile())  ### with model comparison ### specify a \"null model\" nested in the first one: no fixed effects, only intercept fm0 <- lmer(Reaction ~ (Days | Subject), sleepstudy) save.lmer.effects(lmerObj = fm1, lmerObjRestrict = fm0, fileName = tempfile()) } # }"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/transferAttributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Transfer attributes from a origin data.frame to a target data.frame. — transferAttributes","title":"Transfer attributes from a origin data.frame to a target data.frame. — transferAttributes","text":"Function allows copy attributes (subset ) common variables origin data.frame target data.frame.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/transferAttributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transfer attributes from a origin data.frame to a target data.frame. — transferAttributes","text":"","code":"transferAttributes(origin, target, whichVars = NULL, whichAttrs = NULL)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/transferAttributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transfer attributes from a origin data.frame to a target data.frame. — transferAttributes","text":"origin data.frame attributes copied. target target data.frame attributes copied. whichVars Optional: character vector variables attributes copied. NULL, common variables used. whichAttrs Optional: character vector attributes copied. NULL, attributes origin data.frame variables used.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/transferAttributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transfer attributes from a origin data.frame to a target data.frame. — transferAttributes","text":"target data.frame additional attributes","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/transferAttributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transfer attributes from a origin data.frame to a target data.frame. — transferAttributes","text":"","code":"mtcars2 <- mtcars attr(mtcars[,\"cyl\"], \"varLabel\") <- \"Number of cylinders\" mtcars2 <- transferAttributes(mtcars, mtcars2, whichVars = \"cyl\", whichAttrs=\"varLabel\") #> Error in makeDataFrame(target): could not find function \"makeDataFrame\""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/unzip.wa.html","id":null,"dir":"Reference","previous_headings":"","what":"Unzip files into desired directory — unzip.wa","title":"Unzip files into desired directory — unzip.wa","text":"workaround function unzip provides unexpected errors especially data bases. unzip.wa calls unzip.exe via temporary batch file.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/unzip.wa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unzip files into desired directory — unzip.wa","text":"","code":"unzip.wa(   zipfile,   targetdir = tempdir(),   unzip.exe = \"c:/Program Files/tools/unzip.exe\" )"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/unzip.wa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unzip files into desired directory — unzip.wa","text":"zipfile Folder zip file uncompressed. targetdir folder content written. unzip.exe folder unzip.exe program.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/unzip.wa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unzip files into desired directory — unzip.wa","text":"character string (snippet) useful formula generation.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/unzip.wa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unzip files into desired directory — unzip.wa","text":"Function uses unzip.exe freely available http://stahlworks.com/dev/index.php?tool=zipunzip#zipexamp","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/unzip.wa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unzip files into desired directory — unzip.wa","text":"","code":"if (FALSE) { # \\dontrun{ ### gives error zip::unzip(zipfile = \"q:/BT2016/BT/05_Anschreiben/03_Anschreiben_IQB_an_Eltern_Lehrer_Schulleiter/00_Archiv/20151110_finale_Unterlagen_Genehmigungsverfahren/LV_2016_Unterlagen_BB.zip\", exdir=tempdir()) unzip.wa(zipfile = \"q:/BT2016/BT/05_Anschreiben/03_Anschreiben_IQB_an_Eltern_Lehrer_Schulleiter/00_Archiv/20151110_finale_Unterlagen_Genehmigungsverfahren/LV_2016_Unterlagen_BB.zip\") } # }"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/update_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Update an .xlsx file. — update_xlsx","title":"Update an .xlsx file. — update_xlsx","text":"Update content existing .xlsx file adding removing rows accordance identifier column. content columns variables idCol dropped.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/update_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update an .xlsx file. — update_xlsx","text":"","code":"update_xlsx(newDat, filePath, sheetName, idCol)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/update_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update an .xlsx file. — update_xlsx","text":"newDat new data.frame. filePath path .xlsx file.. sheetName name sheet .xlsx file. idCol Name unique identifier column.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/update_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update an .xlsx file. — update_xlsx","text":"list data.frame.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/update_xlsx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update an .xlsx file. — update_xlsx","text":"function useful , example, recode table decision table written .xlsx underlying data structure changes. cases might useful update .xlsx table, means removing longer existing variables adding rows new variables. Use cases might tables created eatGADS::getChangeMeta() eatFDZ::reverse_check_docu().","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/update_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update an .xlsx file. — update_xlsx","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/write_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Save to .xlsx. — write_xlsx","title":"Save to .xlsx. — write_xlsx","text":"Create .xlsx file multiple sheets.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/write_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save to .xlsx. — write_xlsx","text":"","code":"write_xlsx(df_list, filePath, row.names = FALSE, col.names = TRUE)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/write_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save to .xlsx. — write_xlsx","text":"df_list named list data.frames written .xlsx. names list become sheet names. filePath path output file. row.names Logical: row names data.frames written file? col.names Logical: column names data.frames written file?","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/write_xlsx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save to .xlsx. — write_xlsx","text":"existing file overwritten.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/write_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save to .xlsx. — write_xlsx","text":"","code":"f <- tempfile(fileext = \".xlsx\") write_xlsx(mtcars, filePath = f)"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/wtdHetcor.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted heterogeneous correlation matrix. — wtdHetcor","title":"Weighted heterogeneous correlation matrix. — wtdHetcor","text":"Computes weighted heterogeneous correlation matrix, consisting Pearson product-moment correlations numeric variables, polyserial correlations numeric ordinal variables, polychoric correlations ordinal variables.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/wtdHetcor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted heterogeneous correlation matrix. — wtdHetcor","text":"","code":"wtdHetcor(   dataFrame,   vars = NULL,   weights = NULL,   out = c(\"wide\", \"long\", \"both\"),   triangular = FALSE )"},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/wtdHetcor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted heterogeneous correlation matrix. — wtdHetcor","text":"dataFrame data.frame containing variables vars character numeric vector indicating variables correlation table computed. NULL, variables data.frame used. weights character numeric vector indicating column dataFrame contains numeric non-negative weights. NULL, equally weighted cases assumed, .e. weights defaulted 1. Specifies output format. \"wide\" gives classical correlation matrix, \"long\" gives long format table includes type correlation. triangular Logical: wide-format matrix arranged triangular shape?","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/wtdHetcor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted heterogeneous correlation matrix. — wtdHetcor","text":"correlation table list","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/wtdHetcor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted heterogeneous correlation matrix. — wtdHetcor","text":"Variables data.frame accordingly classified numeric factor variables. Function resembles hetcor function polycor package, allows incorporating weights. purpose, function makes use weightedCorr function wCorr package.","code":""},{"path":"https://beckerbenj.github.io/eatAnalysis/reference/wtdHetcor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted heterogeneous correlation matrix. — wtdHetcor","text":"","code":"data(mtcars) # create arbitrary weights mtcars[,\"weight\"] <- abs(rnorm(nrow(mtcars), 10,5)) # choose variables vars <- c(\"mpg\", \"cyl\", \"hp\") # inappropriate classes: variables which are inherently ordinal, have the 'wrong' # class 'numeric'. sapply(mtcars[,vars], class) #>       mpg       cyl        hp  #> \"numeric\" \"numeric\" \"numeric\"  mtcars[,\"cyl\"] <- as.factor(mtcars[,\"cyl\"]) wtdHetcor(mtcars, vars = vars, out = \"long\") #>   Var1 Var2  class1  class2     method        cor #> 1  cyl  mpg  factor numeric Polyserial -0.9695361 #> 2   hp  mpg numeric numeric    Pearson -0.7761684 #> 3  cyl   hp  factor numeric Polyserial  0.9587446 wtdHetcor(mtcars, vars = vars, weights = \"weight\", out = \"long\") #>   Var1 Var2  class1  class2     method        cor #> 1  cyl  mpg  factor numeric Polyserial -0.9525372 #> 2   hp  mpg numeric numeric    Pearson -0.7957354 #> 3  cyl   hp  factor numeric Polyserial  0.9742075"}]
